<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.diich.mapper.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.diich.core.model.Dictionary" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="lang" property="lang" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, type, parent_id, lang, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from dictionary
    where id = #{id,jdbcType=BIGINT} and status = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dictionary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.diich.core.model.Dictionary" >
    insert into dictionary (id, code, name,
    type, parent_id, lang, status
    )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{type,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, #{lang,jdbcType=CHAR}, #{status,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.diich.core.model.Dictionary" >
    insert into dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="lang != null" >
        lang,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="lang != null" >
        #{lang,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.diich.core.model.Dictionary" >
    update dictionary
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="lang != null" >
        lang = #{lang,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.diich.core.model.Dictionary" >
    update dictionary
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT},
      lang = #{lang,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectListByType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select *
    from dictionary
    where type = #{type,jdbcType=INTEGER} and status = 0
    order by code
  </select>

  <select id="selectByTypeAndCode" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from dictionary
    where type = #{params.type,jdbcType=INTEGER} and code = #{params.code,jdbcType=VARCHAR} and status = 0
    <if test="params.language != null">
      and lang = #{params.language,jdbcType=CHAR}
    </if>
  </select>

  <select id="selectByParentId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    FROM dictionary
    where type = #{params.type,jdbcType=INTEGER} and  status = 0 and
    <choose>
      <when test="params.parentId != null">
        parent_id = #{params.parentId,jdbcType=BIGINT}
      </when>
      <otherwise>
        parent_id is null
      </otherwise>
    </choose>
    <if test="params.language != null">
      and lang = #{params.language,jdbcType=CHAR}
    </if>
    order BY code
  </select>

  <select id="selectAllDictionary" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dictionary where status = 0
  </select>

  <select id="selectList" resultMap="BaseResultMap">
    {call selectDictionaryByTypeParentIdLang(#{type}, #{parentId}, #{lang})}
  </select>
</mapper>