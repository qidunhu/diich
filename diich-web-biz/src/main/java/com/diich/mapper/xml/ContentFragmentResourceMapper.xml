<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.diich.mapper.ContentFragmentResourceMapper" >
  <resultMap id="BaseResultMap" type="com.diich.core.model.ContentFragmentResource" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content_fragment_id" property="contentFragmentId" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="res_order" property="resOrder" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content_fragment_id, resource_id, res_order, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from content_fragment_resource
    where id = #{id,jdbcType=BIGINT} and status = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from content_fragment_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.diich.core.model.ContentFragmentResource" >
    insert into content_fragment_resource (id, content_fragment_id, resource_id,
    res_order, status)
    values (#{id,jdbcType=BIGINT}, #{contentFragmentId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT},
    #{resOrder,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.diich.core.model.ContentFragmentResource" >
    insert into content_fragment_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contentFragmentId != null" >
        content_fragment_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="resOrder != null" >
        res_order,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contentFragmentId != null" >
        #{contentFragmentId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="resOrder != null" >
        #{resOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.diich.core.model.ContentFragmentResource" >
    update content_fragment_resource
    <set >
      <if test="contentFragmentId != null" >
        content_fragment_id = #{contentFragmentId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="resOrder != null" >
        res_order = #{resOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.diich.core.model.ContentFragmentResource" >
    update content_fragment_resource
    set content_fragment_id = #{contentFragmentId,jdbcType=BIGINT},
      resource_id = #{resourceId,jdbcType=BIGINT},
      res_order = #{resOrder,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByContentFragmentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
     from content_fragment_resource where content_fragment_id = #{contentFragmentId,jdbcType=BIGINT} and status = 0
  </select>
  <select id="selectByContentFragmentIds" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
     from content_fragment_resource
    where status = 0 and content_fragment_id in
    <foreach collection="list" item="id" open="(" close=")"
             separator=",">
      #{id}
    </foreach>
  </select>
  <delete id="deleteByContentFragmentId" parameterType="java.lang.Long" >
    delete from content_fragment_resource
    where content_fragment_id = #{contentFragmentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByContentFragmentIdResourceId">
    delete from content_fragment_resource
    where content_fragment_id = #{param1}
      AND resource_id = #{param2}
  </delete>

  <delete id="deleteByResourceId" parameterType="java.lang.Long" >
    delete from content_fragment_resource
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </delete>
</mapper>